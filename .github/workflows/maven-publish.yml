name: Maven Publish

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Version de la release (semver)'
        required: true
        default: 'x.x.x'

jobs:
  maven-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.TOKEN_GITHUB_FOR_GITHUB_ACTION }}

      - name: üïµÔ∏è‚Äç‚ôÇÔ∏è Check current branch
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch: $BRANCH"
          [[ "$BRANCH" == "main" || "$BRANCH" == "updateMavenCentralPublishing" ]] && exit 0 || exit 1

      - name: üî¢ Validate semver version
        run: echo "${{ github.event.inputs.releaseVersion }}" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$'

      - name: ‚ùå Check if tag already exists
        run: |
          TAG="${{ github.event.inputs.releaseVersion }}"
          [[ "$(git tag --list "$TAG")" == "" ]] && exit 0 || exit 1

      - name: ‚öôÔ∏è Set up Java + Maven Central credentials
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: üîê Import and validate GPG key
        run: |
          echo "${{ secrets.MAVEN_GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          echo "Test message" > test.txt
          KEYID=$(gpg --list-secret-keys --with-colons | grep '^sec' | cut -d: -f5 | head -n1)
          gpg --batch --yes --pinentry-mode loopback \
            --passphrase "${{ secrets.MAVEN_GPG_PASSPHRASE }}" \
            -u "$KEYID" -s test.txt
          echo "‚úÖ GPG signing test passed."

      - name: üèóÔ∏è Prepare release (version & tag)
        env:
          NEW_TAG: ${{ github.event.inputs.releaseVersion }}
        run: |
          git config --global user.email "github-action@noreply"
          git config --global user.name "GitHub Action"
          mvn release:prepare -B \
            -DreleaseVersion=$NEW_TAG \
            -DtagNameFormat="@{project.version}" \
            -Darguments=-DskipTests

      - name: üß™ Deploy to OSSRH via Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        run: |
          KEYID=$(gpg --list-secret-keys --with-colons | grep '^sec' | cut -d: -f5 | head -n1)
          mvn -B release:perform -PtoOSSRH \
            -Dgpg.keyname=$KEYID \
            -Dgpg.executable=gpg \
            -Dgpg.useagent=false \
            -Dgpg.passphrase="${{ secrets.MAVEN_GPG_PASSPHRASE }}" \
            -Darguments="-DskipTests"

      - name: üöÄ Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB_FOR_GITHUB_ACTION }}
